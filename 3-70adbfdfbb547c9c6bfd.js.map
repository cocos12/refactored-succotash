{"version":3,"sources":["webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx","webpack:///./node_modules/react-md/lib/Media/index.js"],"names":["PostTags","render","tags","this","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","style","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","label","Component","PostCover","_this$props","fileEdges","postNode","coverHeight","coverClassName","post","frontmatter","coverNodeList","filter","fileNode","node","childImageSharp","absolutePath","indexOf","path","join","cover","length","react_default","gatsby_image_default","fluid","outerWrapperClassName","height","width","coverURL","substring","__PATH_PREFIX__","backgroundImage","queryWrapper","gatsby_browser_entry","query","data","PostCoverComponent","allFile","edges","_590853412","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","Card_default","raise","Media_default","paddingBottom","Media","CardTitle_default","title","Buttons_default","raised","secondary","expander","avatar","Avatars_default","icon","FontIcons_default","iconClassName","moment","date","format","config","dateFormat","subtitle","timeToRead","CardText_default","expandable","excerpt","PostListing","getPostList","postList","postEdges","forEach","postEdge","push","fields","slug","components_PostPreview","React","exports","__esModule","MediaOverlay","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default"],"mappings":"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","file":"3-70adbfdfbb547c9c6bfd.js","sourcesContent":["import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n","import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Button from \"react-md/lib/Buttons\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport moment from \"moment\";\nimport Media, { MediaOverlay } from \"react-md/lib/Media\";\nimport PostTags from \"../PostTags\";\nimport PostCover from \"../PostCover\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./PostPreview.scss\";\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.path}>\n          <Media style={{ height: coverHeight, paddingBottom: \"0px\" }}>\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\n            <MediaOverlay>\n              <CardTitle title={postInfo.title}>\n                <Button raised secondary className=\"md-cell--right\">\n                  Read\n                </Button>\n              </CardTitle>\n            </MediaOverlay>\n          </Media>\n        </Link>\n        <CardTitle\n          expander={expand}\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${moment(postInfo.date).format(\n            config.dateFormat\n          )}`}\n          subtitle={`${postInfo.timeToRead} min read`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n","import React from \"react\";\nimport PostPreview from \"../PostPreview\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"md-grid md-cell--8 mobile-fix\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;"],"sourceRoot":""}